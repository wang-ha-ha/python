# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Msg

import flatbuffers

class OnlineEv(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsOnlineEv(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OnlineEv()
        x.Init(buf, n + offset)
        return x

    # OnlineEv
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OnlineEv
    def Softver(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OnlineEv
    def Hardver(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OnlineEv
    def Iccid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def OnlineEvStart(builder): builder.StartObject(3)
def OnlineEvAddSoftver(builder, softver): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(softver), 0)
def OnlineEvAddHardver(builder, hardver): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(hardver), 0)
def OnlineEvAddIccid(builder, iccid): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(iccid), 0)
def OnlineEvEnd(builder): return builder.EndObject()
