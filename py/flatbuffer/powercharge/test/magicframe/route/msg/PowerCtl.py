# automatically generated by the FlatBuffers compiler, do not modify

# namespace: msg

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PowerCtl(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PowerCtl()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPowerCtl(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PowerCtl
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PowerCtl
    def Mode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PowerCtl
    def Reply(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PowerCtl
    def Result(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # PowerCtl
    def Reason(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(4)
def PowerCtlStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddMode(builder, mode): builder.PrependInt32Slot(0, mode, 0)
def PowerCtlAddMode(builder, mode):
    """This method is deprecated. Please switch to AddMode."""
    return AddMode(builder, mode)
def AddReply(builder, reply): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(reply), 0)
def PowerCtlAddReply(builder, reply):
    """This method is deprecated. Please switch to AddReply."""
    return AddReply(builder, reply)
def AddResult(builder, result): builder.PrependInt8Slot(2, result, 0)
def PowerCtlAddResult(builder, result):
    """This method is deprecated. Please switch to AddResult."""
    return AddResult(builder, result)
def AddReason(builder, reason): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(reason), 0)
def PowerCtlAddReason(builder, reason):
    """This method is deprecated. Please switch to AddReason."""
    return AddReason(builder, reason)
def End(builder): return builder.EndObject()
def PowerCtlEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)